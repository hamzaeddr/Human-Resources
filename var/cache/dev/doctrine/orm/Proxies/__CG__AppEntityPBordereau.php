<?php

namespace Proxies\__CG__\App\Entity;


/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class PBordereau extends \App\Entity\PBordereau implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\PBordereau' . "\0" . 'id', '' . "\0" . 'App\\Entity\\PBordereau' . "\0" . 'created', '' . "\0" . 'App\\Entity\\PBordereau' . "\0" . 'periode', '' . "\0" . 'App\\Entity\\PBordereau' . "\0" . 'type', '' . "\0" . 'App\\Entity\\PBordereau' . "\0" . 'code', '' . "\0" . 'App\\Entity\\PBordereau' . "\0" . 'userCreated', '' . "\0" . 'App\\Entity\\PBordereau' . "\0" . 'dossier', '' . "\0" . 'App\\Entity\\PBordereau' . "\0" . 'nature', '' . "\0" . 'App\\Entity\\PBordereau' . "\0" . 'bulletins', '' . "\0" . 'App\\Entity\\PBordereau' . "\0" . 'paiement', '' . "\0" . 'App\\Entity\\PBordereau' . "\0" . 'observation', '' . "\0" . 'App\\Entity\\PBordereau' . "\0" . 'active', '' . "\0" . 'App\\Entity\\PBordereau' . "\0" . 'piece', '' . "\0" . 'App\\Entity\\PBordereau' . "\0" . 'natureContract', '' . "\0" . 'App\\Entity\\PBordereau' . "\0" . 'statut'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\PBordereau' . "\0" . 'id', '' . "\0" . 'App\\Entity\\PBordereau' . "\0" . 'created', '' . "\0" . 'App\\Entity\\PBordereau' . "\0" . 'periode', '' . "\0" . 'App\\Entity\\PBordereau' . "\0" . 'type', '' . "\0" . 'App\\Entity\\PBordereau' . "\0" . 'code', '' . "\0" . 'App\\Entity\\PBordereau' . "\0" . 'userCreated', '' . "\0" . 'App\\Entity\\PBordereau' . "\0" . 'dossier', '' . "\0" . 'App\\Entity\\PBordereau' . "\0" . 'nature', '' . "\0" . 'App\\Entity\\PBordereau' . "\0" . 'bulletins', '' . "\0" . 'App\\Entity\\PBordereau' . "\0" . 'paiement', '' . "\0" . 'App\\Entity\\PBordereau' . "\0" . 'observation', '' . "\0" . 'App\\Entity\\PBordereau' . "\0" . 'active', '' . "\0" . 'App\\Entity\\PBordereau' . "\0" . 'piece', '' . "\0" . 'App\\Entity\\PBordereau' . "\0" . 'natureContract', '' . "\0" . 'App\\Entity\\PBordereau' . "\0" . 'statut'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (PBordereau $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load(): void
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized(): bool
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized): void
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null): void
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer(): ?\Closure
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null): void
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner(): ?\Closure
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties(): array
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId(): ?int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getCreated(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreated', []);

        return parent::getCreated();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreated(?\DateTimeInterface $created): \App\Entity\PBordereau
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreated', [$created]);

        return parent::setCreated($created);
    }

    /**
     * {@inheritDoc}
     */
    public function getPeriode(): ?\App\Entity\Periode
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPeriode', []);

        return parent::getPeriode();
    }

    /**
     * {@inheritDoc}
     */
    public function setPeriode(?\App\Entity\Periode $periode): \App\Entity\PBordereau
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPeriode', [$periode]);

        return parent::setPeriode($periode);
    }

    /**
     * {@inheritDoc}
     */
    public function getType(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getType', []);

        return parent::getType();
    }

    /**
     * {@inheritDoc}
     */
    public function setType(?string $type): \App\Entity\PBordereau
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setType', [$type]);

        return parent::setType($type);
    }

    /**
     * {@inheritDoc}
     */
    public function getCode(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCode', []);

        return parent::getCode();
    }

    /**
     * {@inheritDoc}
     */
    public function setCode(?string $code): \App\Entity\PBordereau
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCode', [$code]);

        return parent::setCode($code);
    }

    /**
     * {@inheritDoc}
     */
    public function getUserCreated(): ?\App\Entity\Users
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserCreated', []);

        return parent::getUserCreated();
    }

    /**
     * {@inheritDoc}
     */
    public function setUserCreated(?\App\Entity\Users $userCreated): \App\Entity\PBordereau
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUserCreated', [$userCreated]);

        return parent::setUserCreated($userCreated);
    }

    /**
     * {@inheritDoc}
     */
    public function getDossier(): ?\App\Entity\PDossier
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDossier', []);

        return parent::getDossier();
    }

    /**
     * {@inheritDoc}
     */
    public function setDossier(?\App\Entity\PDossier $dossier): \App\Entity\PBordereau
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDossier', [$dossier]);

        return parent::setDossier($dossier);
    }

    /**
     * {@inheritDoc}
     */
    public function getNature(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNature', []);

        return parent::getNature();
    }

    /**
     * {@inheritDoc}
     */
    public function setNature(?string $nature): \App\Entity\PBordereau
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNature', [$nature]);

        return parent::setNature($nature);
    }

    /**
     * {@inheritDoc}
     */
    public function getBulletins(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBulletins', []);

        return parent::getBulletins();
    }

    /**
     * {@inheritDoc}
     */
    public function addBulletin(\App\Entity\Tbulletin $bulletin): \App\Entity\PBordereau
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addBulletin', [$bulletin]);

        return parent::addBulletin($bulletin);
    }

    /**
     * {@inheritDoc}
     */
    public function removeBulletin(\App\Entity\Tbulletin $bulletin): \App\Entity\PBordereau
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeBulletin', [$bulletin]);

        return parent::removeBulletin($bulletin);
    }

    /**
     * {@inheritDoc}
     */
    public function getPaiement(): ?\App\Entity\PPaiement
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPaiement', []);

        return parent::getPaiement();
    }

    /**
     * {@inheritDoc}
     */
    public function setPaiement(?\App\Entity\PPaiement $paiement): \App\Entity\PBordereau
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPaiement', [$paiement]);

        return parent::setPaiement($paiement);
    }

    /**
     * {@inheritDoc}
     */
    public function getObservation(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getObservation', []);

        return parent::getObservation();
    }

    /**
     * {@inheritDoc}
     */
    public function setObservation(?string $observation): \App\Entity\PBordereau
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setObservation', [$observation]);

        return parent::setObservation($observation);
    }

    /**
     * {@inheritDoc}
     */
    public function isActive(): ?bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isActive', []);

        return parent::isActive();
    }

    /**
     * {@inheritDoc}
     */
    public function setActive(?bool $active): \App\Entity\PBordereau
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setActive', [$active]);

        return parent::setActive($active);
    }

    /**
     * {@inheritDoc}
     */
    public function getPiece(): ?\App\Entity\PPiece
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPiece', []);

        return parent::getPiece();
    }

    /**
     * {@inheritDoc}
     */
    public function setPiece(?\App\Entity\PPiece $piece): \App\Entity\PBordereau
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPiece', [$piece]);

        return parent::setPiece($piece);
    }

    /**
     * {@inheritDoc}
     */
    public function getNatureContract(): ?\App\Entity\PnatureContract
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNatureContract', []);

        return parent::getNatureContract();
    }

    /**
     * {@inheritDoc}
     */
    public function setNatureContract(?\App\Entity\PnatureContract $natureContract): \App\Entity\PBordereau
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNatureContract', [$natureContract]);

        return parent::setNatureContract($natureContract);
    }

    /**
     * {@inheritDoc}
     */
    public function getStatut(): ?\App\Entity\PStatut
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatut', []);

        return parent::getStatut();
    }

    /**
     * {@inheritDoc}
     */
    public function setStatut(?\App\Entity\PStatut $statut): \App\Entity\PBordereau
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStatut', [$statut]);

        return parent::setStatut($statut);
    }

}
